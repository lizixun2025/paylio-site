import { createClient } from '@supabase/supabase-js';

// 初始化 Supabase 客户端
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_ANON_KEY
);

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  try {
    const data = req.body;

    console.log('✅ Webhook Received:', JSON.stringify(data, null, 2));

    // 解析 Moralis 数据结构
    const { chainId, tag, confirmed, blockNumber, txs } = data;

    if (!txs || txs.length === 0) {
      return res.status(400).json({ message: 'No transactions in payload' });
    }

    // 逐条写入数据库
    for (const tx of txs) {
      const { transaction_hash, to, from, value, token_symbol } = tx;

      const { error } = await supabase.from('transactions').insert([{
        chainId,
        tag,
        confirmed,
        block_number: blockNumber,
        transactionHash: transaction_hash,
        to,
        from,
        value,
        tokenSymbol: token_symbol,
        created_at: new Date().toISOString(), // 可选，确保时间存在
      }]);

      if (error) {
        console.error('❌ DB Insert Error:', error);
        return res.status(500).json({ error: 'Database insert failed' });
      }
    }

    return res.status(200).json({ message: 'Transactions stored successfully' });
  } catch (err) {
    console.error('❌ Webhook Error:', err);
    return res.status(500).json({ message: 'Internal Server Error' });
  }
}
